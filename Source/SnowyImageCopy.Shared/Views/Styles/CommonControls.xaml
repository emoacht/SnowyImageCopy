<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="CustomTheme.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<!--==========================================
	 Custom styles, templates for common controls
	===========================================-->

	<!-- Focus Visual for Button -->
	<Style x:Key="ButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle
							Margin="2"
							StrokeThickness="1"
							Stroke="#60000000"
							StrokeDashArray="1 2"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Skeleton Template for Button -->
	<ControlTemplate x:Key="ButtonTemplate">
		<Border BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				Background="{TemplateBinding Background}"
				TextBlock.Foreground="{TemplateBinding Foreground}">
			<ContentPresenter
				HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
				VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
				Margin="{TemplateBinding Padding}"
				Content="{TemplateBinding ContentPresenter.Content}"/>
		</Border>
	</ControlTemplate>

	<!-- Button base colors -->
	<SolidColorBrush x:Key="Button.Normal.Border" Color="#FFACACAC"/>
	<LinearGradientBrush x:Key="Button.Normal.Background" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#FFF0F0F0" Offset="0.0"/>
		<GradientStop Color="#FFE5E5E5" Offset="1.0"/>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF7EB4EA"/>
	<LinearGradientBrush x:Key="Button.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#FFECF4FC" Offset="0.0"/>
		<GradientStop Color="#FFDCECFC" Offset="1.0"/>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF569DE5"/>
	<LinearGradientBrush x:Key="Button.Pressed.Background" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#FFDAECFC" Offset="0.0"/>
		<GradientStop Color="#FFC4E0FC" Offset="1.0"/>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFD9D9D9"/>
	<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF0F0F0"/>
	<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

	<!-- ButtonBase for Button, RepeatButton -->
	<Style x:Key="ButtonBaseStyle" TargetType="{x:Type ButtonBase}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="BorderBrush" Value="{StaticResource Button.Normal.Border}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="{StaticResource Button.Normal.Background}"/>
		<Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>

		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}"/>
				<Setter Property="Background" Value="{StaticResource Button.MouseOver.Background}"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}"/>
				<Setter Property="Background" Value="{StaticResource Button.Pressed.Background}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}"/>
				<Setter Property="Background" Value="{StaticResource Button.Disabled.Background}"/>
				<Setter Property="Foreground" Value="{StaticResource Button.Disabled.Foreground}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Button -->
	<Style x:Key="SendButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Background" Value="{StaticResource SnowGray.Normal.Background}"/>
		<Setter Property="Foreground" Value="{StaticResource SnowGray.Normal.Foreground}"/>
		<Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>

		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource SnowBlue.MouseOver.Background}"/>
				<Setter Property="Foreground" Value="{StaticResource SnowBlue.Normal.Foreground}"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="{StaticResource SnowBlue.Pressed.Background}"/>
				<Setter Property="Foreground" Value="{StaticResource SnowBlue.Normal.Foreground}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="{StaticResource SnowBlue.Disabled.Background}"/>
				<Setter Property="Foreground" Value="{StaticResource SnowBlue.Disabled.Foreground}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- ToggleButton -->
	<Style x:Key="DrawButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="BorderBrush" Value="{StaticResource Window.Background}"/>
		<!-- BorderThickness is to be customized -->
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Background" Value="{StaticResource SnowBlue.Normal.Background}"/>
		<Setter Property="Foreground" Value="{StaticResource SnowBlue.Normal.Foreground}"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>

		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource SnowBlue.MouseOver.Background}"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="{StaticResource SnowBlue.MouseOver.Background}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="{StaticResource SnowBlue.Disabled.Background}"/>
				<Setter Property="Foreground" Value="{StaticResource SnowBlue.Disabled.Foreground}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="QuickButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Background" Value="{StaticResource SnowGray.Normal.Background}"/>
		<Setter Property="Foreground" Value="{StaticResource SnowGray.Normal.Foreground}"/>
		<Setter Property="Padding" Value="4"/>
		<Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>

		<Style.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Background" Value="{StaticResource SnowBlue.Normal.Background}"/>
				<Setter Property="Foreground" Value="{StaticResource SnowBlue.Normal.Foreground}"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource SnowBlue.MouseOver.Background}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Normal GroupBox -->
	<Style TargetType="{x:Type GroupBox}">
		<Setter Property="BorderBrush" Value="{StaticResource BorderLine.Strong}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<ControlTemplate.Resources>
						<BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
					</ControlTemplate.Resources>

					<Grid SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="6"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="6"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="6"/>
						</Grid.RowDefinitions>

						<Border Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" Grid.RowSpan="3"
								BorderBrush="White"
								BorderThickness="1"
								CornerRadius="4">
							<Border.OpacityMask>
								<MultiBinding ConverterParameter="7"
											  Converter="{StaticResource BorderGapMaskConverter}">
									<Binding ElementName="Header" Path="ActualWidth"/>
									<Binding RelativeSource="{RelativeSource Self}" Path="ActualWidth"/>
									<Binding RelativeSource="{RelativeSource Self}" Path="ActualHeight"/>
								</MultiBinding>
							</Border.OpacityMask>

							<Border BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="1"
									CornerRadius="3">
								<Border BorderBrush="White"
										BorderThickness="1"
										CornerRadius="2"/>
							</Border>
						</Border>
						<Border Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
								x:Name="Header"
								HorizontalAlignment="Left"
								Padding="3,1,3,0">
							<ContentPresenter ContentSource="Header"
											  RecognizesAccessKey="True"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
						<ContentPresenter Grid.Column="1" Grid.Row="2"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Item GroupBox -->
	<Style x:Key="ItemGroupStyle" TargetType="{x:Type GroupBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>

						<Border BorderThickness="0,0,0,1"
								BorderBrush="{StaticResource ItemHeader.Border}"
								SnapsToDevicePixels="True">
							<TextBlock Margin="6,2,0,2"
									   FontSize="15"
									   Foreground="{StaticResource ItemHeader.Foreground}"
									   Text="{Binding Header, RelativeSource={RelativeSource AncestorType=GroupBox}}"/>
						</Border>
						<Grid Grid.Row="1">
							<ContentPresenter/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ItemMemberCenterStyle" TargetType="{x:Type GroupBox}">
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<DockPanel Margin="0,4">
						<Grid DockPanel.Dock="Right"
							  Margin="4,0,0,0">
							<ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Grid>
						<TextBlock DockPanel.Dock="Left"
								   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								   TextWrapping="Wrap"
								   Text="{Binding Header, RelativeSource={RelativeSource AncestorType=GroupBox}}"/>
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ItemMemberTopStyle" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource ItemMemberCenterStyle}">
		<Setter Property="VerticalContentAlignment" Value="Top"/>
	</Style>

	<Style x:Key="ItemMemberSealedStyle" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource ItemMemberTopStyle}">
		<Setter Property="Visibility" Value="Collapsed"/>
	</Style>

</ResourceDictionary>